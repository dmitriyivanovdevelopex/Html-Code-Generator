<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta charset="utf-8">
<title>Maximum Subarray Sum</title>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="description" content="Web-site dedicated to study of Algorithms and Data Structures. All Examples are in C#.">
<meta name="author" content="Petro Kolosov">
<meta name="keywords" content="Data structures, Algorithms">
<meta name="revisit-after" content="3 days">
<html prefix="og: http://ogp.me/ns#">
<meta name="twitter:card" content="summary" />
<meta name="twitter:site" content="https://kolosovpetro.github.io/Html-Code-Generator/RootFolder" />
<meta name="twitter:title" content="Algorithms and Data Structures in C#" />
<meta name="twitter:description" content="Web-site dedicated to study of Algorithms and Data Structures. All Examples are in C#." />
<meta name="twitter:image" content="https://kolosovpetro.github.io/Html-Code-Generator/RootFolder/css/card_image.jpg" />
<link rel="icon" type="image/png" href="https://kolosovpetro.github.io/Html-Code-Generator/RootFolder/css/favicon-16x16.png" sizes="16x16" />
<link rel="stylesheet" type="text/css" media="screen" href="https://kolosovpetro.github.io/Html-Code-Generator/RootFolder/css/compScience.css">
<link rel="stylesheet" href="https://kolosovpetro.github.io/Html-Code-Generator/RootFolder/css/darcula.css">
<script src="https://kolosovpetro.github.io/Html-Code-Generator/RootFolder/css/highlight.pack.js"></script>
<script>hljs.initHighlightingOnLoad();</script>
</head>
<body class="compScience">
<h1>Algorithms and Data Structures in C#</h1>
<h2>Maximum Subarray Sum</h2>
<h3>Description</h3> Finds maximum n-length subarray sum of given collection. Divide and Conquer.
<ul>
<li><a href="https://github.com/kolosovpetro/Html-Code-Generator">Source</a></li>
<li><a href="../">Back</a></li>
</ul>
<h3>Code snippet</h3>
<div class="common">
<pre><code class="csharp">
public static int MaxSubArrayDivideConquer(int[] array, int start, int end)
{
    if (start == end) return array[start];
    var mid = (start + end) / 2;
    var leftSum = MaxSubArrayDivideConquer(array, start, mid);
    var rightSum = MaxSubArrayDivideConquer(array, mid + 1, end);
    var crossSum = FindMaxCrossSubArray(array, start, mid, end);

    return new[] {leftSum, rightSum, crossSum}.Max();
}

private static int FindMaxCrossSubArray(int[] array, int first, int mid, int last)
{
    int leftSum = 0, rightSum = 0, sum = 0;

    for (var i = mid; i &gt;= first; i--)
        sum += array[i];
		
    if (sum &gt; leftSum)
        leftSum = sum;

    sum = 0;

    for (var k = mid + 1; k &lt; last; k++)
        sum += array[k];
		
    if (rightSum &lt; sum)
        rightSum = sum;

    return leftSum + rightSum;
}
</code></pre>
</div>
</body>
</html>
