public static IEnumerable&lt;IVertex&lt;T&gt;&gt; KahnSort(IGraph&lt;T&gt; graph)
{
    if (!graph.IsAcyclic())
        throw new InvalidOperationException("Kahn sort can be performed only on acyclic graph.");

    var queue = new Queue&lt;IVertex&lt;T&gt;&gt;();
    var startVertices = graph.Vertices.Where(x =&gt; x.InDegree() == 0).ToList();
    foreach (var vertex in startVertices)
        queue.Enqueue(vertex);

    while (queue.Any())
    {
        var vertex = queue.Dequeue();
        yield return vertex;
        var adjacentVertices = vertex.AdjacentVertices();
        graph.RemoveVertex(vertex);

        foreach (var v in adjacentVertices.Where(v =&gt; v.InDegree() == 0)) 
            queue.Enqueue(v);
    }
}