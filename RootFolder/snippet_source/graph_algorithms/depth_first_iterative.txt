public static IEnumerable<IVertex<T>> DepthFirstIterative(IGraph<T> graph, IVertex<T> startVertex,
    IVertex<T> searchVertex)
{
    if (!graph.ContainsVertex(startVertex) || !graph.ContainsVertex(searchVertex))
        throw new InvalidOperationException("One or more vertices are not belong to graph.");

    var stack = new Stack<IVertex<T>>();

    stack.Push(startVertex);

    while (stack.Any())
    {
        var vertex = stack.Pop();
        vertex.Visit();
        yield return vertex;
        if (vertex.Equals(searchVertex))
            yield break;
        var unvisitedVertices = vertex.AdjacentUnvisitedVertices();
        foreach (var v in unvisitedVertices)
            stack.Push(v);
    }
}