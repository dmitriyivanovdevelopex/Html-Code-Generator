public IBinarySearchTree BstDelete(IBinarySearchTree binarySearchTree)
{
    if (!binarySearchTree.HasLeft)
        return Transplant(binarySearchTree, binarySearchTree.Right);

    if (!binarySearchTree.HasRight)
        return Transplant(binarySearchTree, binarySearchTree.Left);

    var successor = binarySearchTree.Right.Min();

    if (successor.Parent != binarySearchTree)
    {
        Transplant(successor, successor.Right);
        successor.Right = binarySearchTree.Right;
        successor.Right.Parent = successor;
    }

    Transplant(binarySearchTree, successor);
    successor.Left = binarySearchTree.Left;
    successor.Left.Parent = successor;
    Count--;
    return successor;
}