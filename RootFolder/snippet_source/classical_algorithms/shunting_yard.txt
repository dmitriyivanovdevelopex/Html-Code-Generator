public static Queue<char> ShuntingYard(string input)
{
    var outputQueue = new Queue<char>();
    var operandStack = new Stack<char>();

    foreach (var token in input)
    {
        if (int.TryParse(token.ToString(), out _))
        {
            outputQueue.Enqueue(token);
            continue;
        }
                
        switch (token)
        {
            case '(':
                    operandStack.Push(token);
                    continue;
            case ')':
                {
                    while (operandStack.Peek() != '(') 
                        outputQueue.Enqueue(operandStack.Pop());

                    operandStack.Pop();
                    continue;
                }
        }

        while (operandStack.Any()
            && Precedence(operandStack.Peek()) >= Precedence(token)
            && Associativity(token) == "Left") 
                outputQueue.Enqueue(operandStack.Pop());

        operandStack.Push(token);
    }

    while (operandStack.Any()) outputQueue.Enqueue(operandStack.Pop());
    return outputQueue;
}